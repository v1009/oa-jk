<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ht.oa.jk.dao.SResourcesMapper" >
  <resultMap id="BaseResultMap" type="com.ht.oa.jk.model.SResources" >
    <id column="resource_id" property="resourceId" jdbcType="BIGINT" />
    <result column="resource_name" property="resourceName" jdbcType="VARCHAR" />
    <result column="resource_type" property="resourceType" jdbcType="VARCHAR" />
    <result column="resource_desc" property="resourceDesc" jdbcType="VARCHAR" />
    <result column="resource_string" property="resourceString" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="leaf" property="leaf" jdbcType="BIT" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="last_time" property="lastTime" jdbcType="TIMESTAMP" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    resource_id, resource_name, resource_type, resource_desc, resource_string, parent_id, 
    leaf, priority, status, insert_time, last_time, icon
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from s_resources
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from s_resources
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ht.oa.jk.model.SResources" >
    insert into s_resources (resource_id, resource_name, resource_type, 
      resource_desc, resource_string, parent_id, 
      leaf, priority, status, 
      insert_time, last_time, icon
      )
    values (#{resourceId,jdbcType=BIGINT}, #{resourceName,jdbcType=VARCHAR}, #{resourceType,jdbcType=VARCHAR}, 
      #{resourceDesc,jdbcType=VARCHAR}, #{resourceString,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{leaf,jdbcType=BIT}, #{priority,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{insertTime,jdbcType=TIMESTAMP}, #{lastTime,jdbcType=TIMESTAMP}, #{icon,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ht.oa.jk.model.SResources" >
    insert into s_resources
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="resourceName != null" >
        resource_name,
      </if>
      <if test="resourceType != null" >
        resource_type,
      </if>
      <if test="resourceDesc != null" >
        resource_desc,
      </if>
      <if test="resourceString != null" >
        resource_string,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="leaf != null" >
        leaf,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
      <if test="lastTime != null" >
        last_time,
      </if>
      <if test="icon != null" >
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="resourceId != null" >
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="resourceName != null" >
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="resourceDesc != null" >
        #{resourceDesc,jdbcType=VARCHAR},
      </if>
      <if test="resourceString != null" >
        #{resourceString,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="leaf != null" >
        #{leaf,jdbcType=BIT},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null" >
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ht.oa.jk.model.SResources" >
    update s_resources
    <set >
      <if test="resourceName != null" >
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        resource_type = #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="resourceDesc != null" >
        resource_desc = #{resourceDesc,jdbcType=VARCHAR},
      </if>
      <if test="resourceString != null" >
        resource_string = #{resourceString,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="leaf != null" >
        leaf = #{leaf,jdbcType=BIT},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null" >
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ht.oa.jk.model.SResources" >
    update s_resources
    set resource_name = #{resourceName,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=VARCHAR},
      resource_desc = #{resourceDesc,jdbcType=VARCHAR},
      resource_string = #{resourceString,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      leaf = #{leaf,jdbcType=BIT},
      priority = #{priority,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      icon = #{icon,jdbcType=VARCHAR}
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </update>
  <!-- 根据所有资源 -->
  <select id="queryAllResources" resultMap="BaseResultMap">
      select * from s_resources where status=1 order by priority
  </select>
  <!-- 根据用户查询所有的资源-->
  <select id="queryResourcesByMid" parameterType="java.lang.Long" resultMap="BaseResultMap">
      select * from s_resources where resource_id in (
          select resource_id from s_role_resources where role_id in (
             select role_id from s_user_role where user_id=#{mid}
          )
      )
      and status=1
      order by priority
  </select>
  <!-- 更新 -->
  <update id="updateLeafByResourceId" parameterType="java.lang.Long">
      update s_resources set leaf=0 where resource_id = #{resourceId,jdbcType=BIGINT} and status=1
  </update>
  <!-- 更新资源 -->
  <update id="updateResource" parameterType="com.ht.oa.jk.model.SResources">
    update s_resources
    <set>
      <if test="resourceName != null">
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceString != null">
        resource_string = #{resourceString,jdbcType=VARCHAR},
      </if>
      <if test="resourceDesc != null">
        resource_desc = #{resourceDesc,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where resource_id = #{resourceId,jdbcType=BIGINT} and status=1
  </update>
  <!-- 根据角色查询所有资源 -->
  <select id="queryResourcesByRoleId" parameterType="java.lang.Long" resultMap="BaseResultMap">
      select * from s_resources where resource_id in (
          select resource_id from s_role_resources where role_id=#{roleId}
      )
      and status=1
      order by priority
  </select>

</mapper>