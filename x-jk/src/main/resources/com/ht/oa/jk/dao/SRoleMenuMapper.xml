<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ht.oa.jk.dao.SRoleMenuMapper" >
  <resultMap id="BaseResultMap" type="com.ht.oa.jk.model.SRoleMenu" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="menu_id" property="menuId" jdbcType="BIGINT" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="add_mid" property="addMid" jdbcType="BIGINT" />
    <result column="owner_mid" property="ownerMid" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, menu_id, insert_time, add_mid, owner_mid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from s_role_menu
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from s_role_menu
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ht.oa.jk.model.SRoleMenu" >
    insert into s_role_menu (id, role_id, menu_id, 
      insert_time, add_mid, owner_mid
      )
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{menuId,jdbcType=BIGINT}, 
      #{insertTime,jdbcType=TIMESTAMP}, #{addMid,jdbcType=BIGINT}, #{ownerMid,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ht.oa.jk.model.SRoleMenu" >
    insert into s_role_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="menuId != null" >
        menu_id,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
      <if test="addMid != null" >
        add_mid,
      </if>
      <if test="ownerMid != null" >
        owner_mid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="menuId != null" >
        #{menuId,jdbcType=BIGINT},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addMid != null" >
        #{addMid,jdbcType=BIGINT},
      </if>
      <if test="ownerMid != null" >
        #{ownerMid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ht.oa.jk.model.SRoleMenu" >
    update s_role_menu
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="menuId != null" >
        menu_id = #{menuId,jdbcType=BIGINT},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addMid != null" >
        add_mid = #{addMid,jdbcType=BIGINT},
      </if>
      <if test="ownerMid != null" >
        owner_mid = #{ownerMid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ht.oa.jk.model.SRoleMenu" >
    update s_role_menu
    set role_id = #{roleId,jdbcType=BIGINT},
      menu_id = #{menuId,jdbcType=BIGINT},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      add_mid = #{addMid,jdbcType=BIGINT},
      owner_mid = #{ownerMid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 删除记录通过角色id -->
  <delete id="delRecordByRoleId" parameterType="com.ht.oa.jk.model.SRoleMenu">
    delete from s_role_menu where role_id = #{roleId,jdbcType=BIGINT} and owner_mid = #{ownerMid,jdbcType=BIGINT}
  </delete>
  <!-- 添加菜单到角色 -->
  <insert id="batchInsert" parameterType="java.util.List">
    insert into s_role_menu (id, role_id, menu_id,
    insert_time, add_mid, owner_mid
    )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.roleId,jdbcType=BIGINT}, #{item.menuId,jdbcType=BIGINT},
      #{item.insertTime,jdbcType=TIMESTAMP}, #{item.addMid,jdbcType=BIGINT}, #{item.ownerMid,jdbcType=BIGINT}
      )
    </foreach>
  </insert>

</mapper>